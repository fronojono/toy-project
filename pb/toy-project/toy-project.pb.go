// Code generated by protoc-gen-go. DO NOT EDIT.
// source: toy-project/toy-project.proto

package toyprojectpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PingRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingRequest) Reset()         { *m = PingRequest{} }
func (m *PingRequest) String() string { return proto.CompactTextString(m) }
func (*PingRequest) ProtoMessage()    {}
func (*PingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_toy_project_9375758901661a1c, []int{0}
}
func (m *PingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingRequest.Unmarshal(m, b)
}
func (m *PingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingRequest.Marshal(b, m, deterministic)
}
func (dst *PingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingRequest.Merge(dst, src)
}
func (m *PingRequest) XXX_Size() int {
	return xxx_messageInfo_PingRequest.Size(m)
}
func (m *PingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PingRequest proto.InternalMessageInfo

type PingReply struct {
	Up                   bool     `protobuf:"varint,1,opt,name=up,proto3" json:"up,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingReply) Reset()         { *m = PingReply{} }
func (m *PingReply) String() string { return proto.CompactTextString(m) }
func (*PingReply) ProtoMessage()    {}
func (*PingReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_toy_project_9375758901661a1c, []int{1}
}
func (m *PingReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingReply.Unmarshal(m, b)
}
func (m *PingReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingReply.Marshal(b, m, deterministic)
}
func (dst *PingReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingReply.Merge(dst, src)
}
func (m *PingReply) XXX_Size() int {
	return xxx_messageInfo_PingReply.Size(m)
}
func (m *PingReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PingReply.DiscardUnknown(m)
}

var xxx_messageInfo_PingReply proto.InternalMessageInfo

func (m *PingReply) GetUp() bool {
	if m != nil {
		return m.Up
	}
	return false
}

func init() {
	proto.RegisterType((*PingRequest)(nil), "hb.grpc.toyproject.PingRequest")
	proto.RegisterType((*PingReply)(nil), "hb.grpc.toyproject.PingReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ToyProjectClient is the client API for ToyProject service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ToyProjectClient interface {
	Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingReply, error)
}

type toyProjectClient struct {
	cc *grpc.ClientConn
}

func NewToyProjectClient(cc *grpc.ClientConn) ToyProjectClient {
	return &toyProjectClient{cc}
}

func (c *toyProjectClient) Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingReply, error) {
	out := new(PingReply)
	err := c.cc.Invoke(ctx, "/hb.grpc.toyproject.ToyProject/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ToyProjectServer is the server API for ToyProject service.
type ToyProjectServer interface {
	Ping(context.Context, *PingRequest) (*PingReply, error)
}

func RegisterToyProjectServer(s *grpc.Server, srv ToyProjectServer) {
	s.RegisterService(&_ToyProject_serviceDesc, srv)
}

func _ToyProject_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ToyProjectServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hb.grpc.toyproject.ToyProject/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ToyProjectServer).Ping(ctx, req.(*PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ToyProject_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hb.grpc.toyproject.ToyProject",
	HandlerType: (*ToyProjectServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _ToyProject_Ping_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "toy-project/toy-project.proto",
}

func init() {
	proto.RegisterFile("toy-project/toy-project.proto", fileDescriptor_toy_project_9375758901661a1c)
}

var fileDescriptor_toy_project_9375758901661a1c = []byte{
	// 170 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2d, 0xc9, 0xaf, 0xd4,
	0x2d, 0x28, 0xca, 0xcf, 0x4a, 0x4d, 0x2e, 0xd1, 0x47, 0x62, 0xeb, 0x15, 0x14, 0xe5, 0x97, 0xe4,
	0x0b, 0x09, 0x65, 0x24, 0xe9, 0xa5, 0x17, 0x15, 0x24, 0xeb, 0x95, 0xe4, 0x57, 0x42, 0x65, 0x94,
	0x78, 0xb9, 0xb8, 0x03, 0x32, 0xf3, 0xd2, 0x83, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x94, 0xa4,
	0xb9, 0x38, 0x21, 0xdc, 0x82, 0x9c, 0x4a, 0x21, 0x3e, 0x2e, 0xa6, 0xd2, 0x02, 0x09, 0x46, 0x05,
	0x46, 0x0d, 0x8e, 0x20, 0xa6, 0xd2, 0x02, 0xa3, 0x10, 0x2e, 0xae, 0x90, 0xfc, 0xca, 0x00, 0x88,
	0x4e, 0x21, 0x37, 0x2e, 0x16, 0x90, 0x52, 0x21, 0x79, 0x3d, 0x4c, 0x63, 0xf5, 0x90, 0xcc, 0x94,
	0x92, 0xc5, 0xad, 0xa0, 0x20, 0xa7, 0xd2, 0xc9, 0x91, 0x4b, 0x2c, 0x39, 0x3f, 0x17, 0x8b, 0x1a,
	0x27, 0x11, 0x04, 0x3b, 0x38, 0x23, 0x35, 0xb5, 0x24, 0x00, 0xe4, 0x8b, 0x00, 0xc6, 0x28, 0x1e,
	0x84, 0x78, 0x41, 0x52, 0x07, 0x23, 0x63, 0x12, 0x1b, 0xd8, 0x7f, 0xc6, 0x80, 0x00, 0x00, 0x00,
	0xff, 0xff, 0xcc, 0xfe, 0xd2, 0xca, 0x00, 0x01, 0x00, 0x00,
}
